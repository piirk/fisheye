@mixin center-flex($gap: 0px) {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

@mixin center-flex-column($gap: 0px) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

@mixin grid($rows: auto-fill, $columns: auto-fill, $gap: 0px) {
    display: grid;
    grid-template-rows: repeat($rows, 1fr);
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

@mixin grid-columns($columns: auto-fill, $width: 1fr, $gap: 0px) {
    display: grid;
    grid-template-columns: repeat($columns, $width);
    gap: $gap;
}

@mixin position-fix-center {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// break points variables for media queries with max-width
$breakpoints: (
    xs: 576px,
    sm: 768px,
    md: 992px,
    lg: 1200px,
    xl: 1400px
);

// media queries mixin
@mixin respond($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    } @else {
        @warn "Invalid breakpoint: #{$breakpoint}.";
    }
}
